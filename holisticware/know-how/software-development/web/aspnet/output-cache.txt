That's very odd... I use the OutputCache attribute in ASP.NET MVC (which reuses 
some of the WebForms caching code) and it doesn't seem to exhibit this behaviour. 

I have this on my home page:
[OutputCache(Location = OutputCacheLocation.Downstream, Duration = ONE_HOUR)]

And this on a different page:
[OutputCache(Location = OutputCacheLocation.Any, Duration = 60 * 5)]

And they both seem to work as expected (and send Cache-Control: public). 
I'm using Nginx FastCGI caching for the home page which is why the caching 
location is only set to Downstream (the cache is being stored in Nginx, not in 
Mono, to make it even faster).


On Sat, Mar 16, 2013 at 2:38 AM, whale <abraham@guyt.org> wrote:

    whale wrote
    > .....
    >
    > However Mono (a recent 3.0.x build on CentOS 6) does use its output cache,
    > BUT a (publicly cached) page served from the output cache is decorated
    > with an incorrect 'Cache-Control: private' header - preventing this page
    > from being cached properly. As soon as the output cache page content
    > expires, the correct 'public' cache header suddenly re-appears.
    >
    > The effect can easily be observed by using the page above, loading it and
    > then refreshing it in your browser while sniffing the HTTP traffic.
    >
    > This looks like a bug in the MONO ASP.NET output cache module - am I
    > overlooking something?

    I really was hoping there would be someone with active knowledge of Mono's
    ASP.NET output cache implementation; is it still actively maintained with
    any hopes of bugfixing? I understand Xamarin's resources go towards mobile
    app development, but it would be nice to know whether Mono has an actual
    future for hosting production ASP.NET applications.

    Gettting caching work properly is essential for serious production stuff.
