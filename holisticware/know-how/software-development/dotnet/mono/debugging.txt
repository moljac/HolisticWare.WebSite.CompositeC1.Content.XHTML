Run it under gdb so you can catch the error: 

Instead of: mono foo.exe Do: gdb --args mono foo.exe 

Then use the command "run". When it crashes do "t a a bt" and send it 
back. 

http://www.mono-project.com/Debugging#Debugging_with_GDB 

can run a program that will listen for monodevelop on a TCP port before 
it enters it's main method. 

$ mono --debug 
--debugger-agent=transport=dt_socket,address=0.0.0.0:12345,server=y,susp 
end=y myprogram.exe 

That will sit listening on port 12345 for a debugger to attach. 

On another host you then do this: 

export MONODEVELOP_SDB_TEST=1 monodevelop 

And then load up your solution for the thing you want to debug, then use 
the "Custom Command Soft Debugger" under the run menu. 

On 10 August 2013 12:51, Matt Calder <mvcalder@gmail.com> wrote: 

We run a mono-based service out of the cloud. The server machines are 
headless, without windowing libraries installed. Is there a good way to 
debug code running under mono from the command line? For the most part 
we rely on mirrored environments that do have Monodevelop capability, 
but that mirroring can be imperfect at times. Thanks, 

